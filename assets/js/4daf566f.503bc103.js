"use strict";(self.webpackChunkclassic=self.webpackChunkclassic||[]).push([[3583],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>g});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),d=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=d(e.components);return n.createElement(l.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=d(r),m=a,g=c["".concat(l,".").concat(m)]||c[m]||u[m]||o;return r?n.createElement(g,i(i({ref:t},p),{},{components:r})):n.createElement(g,i({ref:t},p))}));function g(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[c]="string"==typeof e?e:a,i[1]=s;for(var d=2;d<o;d++)i[d]=r[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},3647:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>d});var n=r(7462),a=(r(7294),r(3905));const o={sidebar_label:"Custom Ore Generators",title:"Creating Custom Ore Generators",sidebar_position:5.6},i=void 0,s={unversionedId:"BedWars1058/developers/Creating-Ore-Generators",id:"BedWars1058/developers/Creating-Ore-Generators",title:"Creating Custom Ore Generators",description:"How to create a custom ore generator.",source:"@site/docs/BedWars1058/developers/Creating-Ore-Generators.md",sourceDirName:"BedWars1058/developers",slug:"/BedWars1058/developers/Creating-Ore-Generators",permalink:"/docs/BedWars1058/developers/Creating-Ore-Generators",draft:!1,editUrl:"https://github.com/andrei1058/docs/edit/main/docs/BedWars1058/developers/Creating-Ore-Generators.md",tags:[],version:"current",lastUpdatedBy:"ajgeiss0702",lastUpdatedAt:1642296275,formattedLastUpdatedAt:"Jan 16, 2022",sidebarPosition:5.6,frontMatter:{sidebar_label:"Custom Ore Generators",title:"Creating Custom Ore Generators",sidebar_position:5.6},sidebar:"bw1058",previous:{title:"Adding Version Support",permalink:"/docs/BedWars1058/developers/version_support"},next:{title:"Addons & Setups",permalink:"/docs/BedWars1058/addons"}},l={},d=[{value:"How to register it",id:"how-to-register-it",level:3}],p={toc:d},c="wrapper";function u(e){let{components:t,...r}=e;return(0,a.kt)(c,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"How to create a custom ore generator."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'public class ExampleGenerator implements IGenerator {\n\n    @Override\n    public void setHologram(@Nullable Hologram hologram) {\n        // set a hologram above your generator\n    }\n\n    @Override\n    public @Nullable Hologram getHologram() {\n        // get the hologram above your generator\n        return hologram;\n    }\n\n    @Override\n    public void disable() {\n        // disable your generator\n        // this will be called when the game ends, at restarting phase\n    }\n\n    @Override\n    public void upgrade() {\n        // this is called when the arena decides to upgrade a generator based on Arena#updateNextEvent()\n        // but if you want it to have a regular behavior you may want to\n        // register it as an arena generator arena.getOreGenerators().add(myCustomGenerator)\n        // make sure to add this in your code if the generator gets upgraded:\n        // Bukkit.getPluginManager().callEvent(new GeneratorUpgradeEvent(this));\n    }\n\n    @Override\n    public void spawnTry() {\n        // This will attempt to spawn the items every second.\n        // Things to keep in consideration: #getSpawnDelay, #getSpawnAtOnce\n        // Handle your logistics and spawn behavior and then you should spawn items with #dropItem(loc)\n        // this will require the generator to be registered as a team or arena generator\n        // otherwise you need to handle it yourself.\n        // Code example: https://pastebin.com/VAsVH6MM\n    }\n\n    @Override\n    public void dropItem(Location location) {\n        // Please keep track of getGeneratorsCfg().getBoolean(ConfigPath.GENERATOR_STACK_ITEMS)\n        // so if items mustn\'t stack give them a custom name like this:\n        // myItem.setCustomName("custom" + id); where id is something unique so they cant stack.\n        // When the item is picked up its item name is automatically removed\n        // if it starts with "custom".\n        // Code example: https://pastebin.com/64vKUiCr\n    }\n\n    @Override\n    public void setSpawnOre(ItemStack spawnOre) {\n        // set generator drop item\n    }\n\n    @Override\n    public IArena getArena() {\n        // get the arena where the generator is placed\n        return arena;\n    }\n\n    @Override\n    public void rotate() {\n        // rotate the generator preview-item if it is the case\n        // this will require the generator to be registered as a team or arena generator\n        // otherwise you need to handle it yourself\n    }\n\n    @Override\n    public void setSpawnDelay(int spawnDelay) {\n        // change spawn delay between drops\n    }\n\n    @Override\n    public void setSpawnAtOnce(int spawnAtOnce) {\n        // set the amount of items that are spawned at once\n    }\n\n    @Override\n    public void enableRotation() {\n        // this is called by BedWars1058 when the game starts. it requires to be a registered generator.\n    }\n\n    @Override\n    public void setSpawnLimit(int value) {\n        // set how many items can be dropped at the generator till pausing the drop of new ones\n    }\n\n    @Override\n    public ITeam getOwnerTeam() {\n        // get the owning team, if it is a team generator.\n        // can be null if it does not belong to a team.\n        return team;\n    }\n\n    @Override\n    public ArmorStand getHologramHolder() {\n        return null;\n    }\n\n    @Override\n    public void setNextSpawn(int nextSpawn) {\n        // set how many seconds till the next #dropItems\n    }\n\n    @Override\n    public void setStackDroppedItems(boolean stackDroppedItems) {\n        // change the item-stacking rule\n    }\n\n    @Override\n    public void setType(GeneratorType type) {\n        // change generator type\n    }\n\n    @Override\n    public void destroyData() {\n        // used to destroy any eventual generator data when the arena restarts\n    }\n\n    @Override\n    public void setTier(int tier) {\n        // change generator tier\n    }\n}\n')),(0,a.kt)("h3",{id:"how-to-register-it"},"How to register it"),(0,a.kt)("p",null,"If you set its type as EMERALD/ DIAMOND and with no team, and you want it to be handled like a regular emerald/ diamond generator you have to add it to this list: ",(0,a.kt)("inlineCode",{parentName:"p"},"IArena#getOreGenerators()"),". Or if you want it to be used as a team generator and refreshed (#spawnTry) by BedWars1058 add it to this list: ",(0,a.kt)("inlineCode",{parentName:"p"},"ITeam#getGenerators()"),". For anything else, handle it yourself."))}u.isMDXComponent=!0}}]);